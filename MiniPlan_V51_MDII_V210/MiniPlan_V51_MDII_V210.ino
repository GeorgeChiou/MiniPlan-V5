// 最後編輯 2017-3-19
// 修正 SSID 名稱錯誤
// 修正 PWM Frequency Calibration 記憶體位置錯誤
// 增加 Motion Editor 相容 API 程式
// 增加 版本紀錄

// 最後編輯 2017-5-14
// 修正 EEPROM.commit(); 與 EEPROM.h 衝突


#include <Wire.h>
#include <Servo.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <Adafruit_PWMServoDriver.h>
#include <EEPROM.h>

// Version
String FW_Version = "MiniPlan V5.1 Firmware Version 2.10 (2017/5/14)";

// I2C Address 0x40
Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();

// Servos Matrix
const int ALLMATRIX = 19;          // 0 ~ 15 Servo + GPIO12 + GPIO14 + Delay Time + PWM Frequency Calibration
const int ALLSERVOS = 18;        // 0 ~ 15 Servo + GPIO12 + GPIO14

// ES08MDII Pulse Traveling 120度
const int PWM_Frequency = 320;   // PWM frequency 300Hz
const int PWMRES_Min = 1;           // PWM Resolution 1
const int PWMRES_Max = 120;      // PWM Resolution 120
const int SERVOMIN = 1110;          // 1110
const int SERVOMAX = 2700;         // 2700

// Servo Delay Base Time
const int BASEDELAYTIME = 10;    // 10ms

// AP Password
const char WiFiAPPSK[] = "12345678";

// Servo PWM Frequency
int Set_PWM_Freq = PWM_Frequency;

// Motion Data Index
int Servo_PROGRAM;
int Servo_PROGRAM_Stack;

// Servo ID
int GPIO_ID;
int GPIO12_PWM;
int GPIO14_PWM;

// Backup Servo Value
int Running_Servo_POS [ALLMATRIX];

ESP8266WebServer server(80);

Servo GPIO12SERVO;
Servo GPIO14SERVO;



/*============================================================================*/
// ES08MDII - 達文西姿勢
/////////////////////////////////////////////////////    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
int Servo_Act_0 [ ] PROGMEM = {   65,      35,      80,      60,      80,     100,     20,      80,      40,     100,      20,       30,       55,       35,       75,       50,        90,       90,        0     };


/*============================================================================*/
// ES08MDII - 立正
/////////////////////////////////////////////////////    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
int Servo_Act_1 [ ] PROGMEM = {   65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,        0     };


/*============================================================================*/
// 鞠躬動作
int Servo_Prg_1_Step = 4;
int Servo_Prg_1 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     120,     80,      40,     110,     25,      100,      30,       55,       35,       75,       50,        90,       90,      500   },     // 立正 右手前平舉內彎 左手後擺
  {    65,      20,      80,      10,      80,     120,     80,      40,     110,     25,      100,      30,      102,      35,       90,       50,        90,       90,      500   },     // 立正 右手前平舉內彎 左手後擺 鞠躬
  {    65,      20,      80,      10,      80,     120,     80,      40,     110,     25,      100,      30,      102,      35,       90,       50,        90,       90,      1000 },     //  鞠躬動作 等待
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      800   }      // 立正
};


/*============================================================================*/
// 揮手動作
int Servo_Prg_2_Step = 9;
int Servo_Prg_2 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     100,     95,      80,      20,      70,      120,      30,       55,       35,       75,       50,        50,       90,      500   },     // 立正 右手上抬向外 頭右轉
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      30,      120,      30,       55,       35,       75,       50,        50,       90,      300   },     // 立正 右手上抬向內 頭右轉
  {    65,      35,      80,      60,      80,     100,     95,      80,      20,      70,      120,      30,       55,       35,       75,       50,        50,       90,      300   },     // 立正 右手上抬向外 頭右轉
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      30,      120,      30,       55,       35,       75,       50,        50,       90,      300   },     // 立正 右手上抬向內 頭右轉
  {    65,      35,      80,      60,      80,       0,       50,     100,     40,      30,       25,       30,       55,       35,       75,       50,       130,      90,      500   },     // 立正 左手上抬向外 頭左轉
  {    65,      35,      80,      60,      80,       0,       80,      80,      40,      30,       25,       30,       55,       35,       75,       50,       130,      90,      300   },     // 立正 左手上抬向內 頭左轉
  {    65,      35,      80,      60,      80,       0,       50,     100,     40,      30,       25,       30,       55,       35,       75,       50,       130,      90,      300   },     // 立正 左手上抬向外 頭左轉
  {    65,      35,      80,      60,      80,       0,       80,      80,      40,      30,       25,       30,       55,       35,       75,       50,       130,      90,      300   },     // 立正 左手上抬向內 頭左轉
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   }      // 立正
};


/*============================================================================*/
// 鋼鐵人動作
int Servo_Prg_3_Step = 8;
int Servo_Prg_3 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    75,      35,      80,      60,      90,     120,     70,     120,      0,      100,      20,       40,       55,       35,       75,       60,        50,       90,      300   },     // 身體左傾斜 右手上抬 掌向外 頭右轉
  {    75,      35,      80,      60,      90,     120,     70,     120,      0,      100,      20,       40,       55,       35,       75,       60,        50,       90,      800   },     // 身體左傾斜 右手上抬 掌向外 頭右轉
  {    55,      35,      80,      60,      70,     100,     20,     120,      0,       50,        0,        20,       55,       35,       75,       40,       130,      90,      300   },     // 身體右傾斜 左手上抬 掌向外 頭左轉
  {    55,      35,      80,      60,      70,     100,     20,     120,      0,       50,        0,        20,       55,       35,       75,       40,       130,      90,      800   },     // 身體右傾斜 左手上抬 掌向外 頭左轉
  {    65,      35,      80,      60,      80,      20,      70,     120,      0,       50,      100,      30,       55,       35,       75,       50,        90,       90,      500   },     // 立正 雙手上抬 掌向外
  {    65,      20,      80,      45,      80,      20,     105,    120,      0,       10,      100,      30,       70,       35,       89,       50,        90,       90,      500   },     // 身體後傾斜 雙手上抬 掌向內
  {    65,      20,      80,      45,      80,      20,     105,    120,      0,       10,      100,      30,       70,       35,       89,       50,        90,       90,      800   },     // 身體後傾斜 雙手上抬 掌向內
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   }      // 立正
};


/*============================================================================*/
// 阿帕契動作
int Servo_Prg_4_Step = 7;
int Servo_Prg_4 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    55,      35,      80,      60,      70,     100,     70,      30,      40,      80,       20,       20,       55,       35,       75,       40,        90,       90,      500   },    // 身體右傾斜
  {    55,      35,      80,      60,      70,     100,     70,      30,      40,      80,       20,       20,       55,       35,       75,       35,       130,      90,      300   },    // 身體右傾斜 左腳預抬 頭左轉
  {    55,      35,      80,      60,      70,     100,     70,      30,     100,     10,      100,      40,       55,       35,       75,       30,       130,      90,      500   },    // 身體右傾斜 右手敬禮 左腳上抬 頭左轉
  {    55,      35,      80,      60,      70,     100,     70,      30,     100,     10,      100,      40,       55,       35,       75,       30,       130,      90,      800   },    // 身體右傾斜 右手敬禮 左腳上抬 頭左轉
  {    55,      35,      80,      60,      70,     100,     70,      30,      40,      80,       20,       20,       55,       35,       75,       35,       130,      90,      600   },    // 身體右傾斜 左腳預抬 頭左轉
  {    55,      35,      80,      60,      70,     100,     70,      30,      40,      80,       20,       20,       55,       35,       75,       40,        90,       90,      500   },    // 身體右傾斜
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   }      // 立正
};


/*============================================================================*/
// 單腳平衡動作 小
/*
  int Servo_Prg_5_Step = 12;
  int Servo_Prg_5 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    75,      35,      80,      60,      90,     100,     20,      80,      40,     100,      20,       40,       55,       35,       75,       60,        90,       90,      500   },     // 身體左傾斜 雙手平舉上抬
  {    75,      35,      80,      60,      90,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      300   },     // 身體左傾斜 雙手平舉上抬旋轉 右腳預抬
  {    80,      35,      80,      60,      70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      500   },     // 身體左傾斜 雙手平舉上抬旋轉 右腳上抬
  {    80,      35,      80,      60,      70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      600   },     // 身體左傾斜 雙手平舉上抬旋轉 右腳上抬
  {    80,      15,      80,       0,       70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      900   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬
  {    80,      15,      80,       0,       70,      50,       0,       80,      40,     120,      70,       40,       55,       35,       80,       60,        50,       90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬 上
  {    80,      15,      80,       0,       70,      50,      40,      80,      40,      80,       70,       40,       55,       35,       80,       60,       130,      90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬 下
  {    80,      15,      80,       0,       70,      50,       0,       80,      40,     120,      70,       40,       55,       35,       80,       60,        50,       90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬 上
  {    80,      15,      80,       0,       70,      50,      40,      80,      40,      80,       70,       40,       55,       35,       80,       60,       130,      90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬 下
  {    80,      15,      80,       0,       70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬
  {    80,      35,      80,      60,      70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      800   },     // 身體左傾斜 雙手平舉上抬旋轉 右腳上抬
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   }      // 立正
  };
*/

/*============================================================================*/
// 單腳平衡動作 大
int Servo_Prg_5_Step = 12;
int Servo_Prg_5 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    75,      35,      80,      60,      90,     100,     20,      80,      40,     100,      20,       40,       55,       35,       75,       60,        90,       90,      500   },     // 身體左傾斜 雙手平舉上抬
  {    80,      35,      80,      60,      90,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      300   },     // 身體左傾斜 雙手平舉上抬旋轉 右腳預抬
  {    83,      35,      80,      60,      70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      500   },     // 身體左傾斜 雙手平舉上抬旋轉 右腳上抬
  {    83,      35,      80,      60,      70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      600   },     // 身體左傾斜 雙手平舉上抬旋轉 右腳上抬
  {    83,      15,      80,       0,       70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      900   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬
  {    83,      15,      80,       0,       70,      50,       0,       80,      40,     120,      70,       40,       55,       35,       80,       60,        50,       90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬 上
  {    83,      15,      80,       0,       70,      50,      40,      80,      40,      80,       70,       40,       55,       35,       80,       60,       130,      90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬 下
  {    83,      15,      80,       0,       70,      50,       0,       80,      40,     120,      70,       40,       55,       35,       80,       60,        50,       90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬 上
  {    83,      15,      80,       0,       70,      50,      40,      80,      40,      80,       70,       40,       55,       35,       80,       60,       130,      90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬 下
  {    83,      15,      80,       0,       70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      500   },     // 身體前傾斜 雙手平舉上抬旋轉 右腳上抬
  {    83,      35,      80,      60,      70,      50,      20,      80,      40,     100,      70,       40,       55,       35,       80,       60,        90,       90,      800   },     // 身體左傾斜 雙手平舉上抬旋轉 右腳上抬
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   }      // 立正
};


/*============================================================================*/
// 暖身動作
int Servo_Prg_6_Step = 16;
int Servo_Prg_6 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     100,     70,      20,     100,     50,       20,       30,       55,       35,       75,       50,        90,       90,      800   },     // 雙手插腰
  {    65,      35,      80,      60,      80,     100,     70,      20,     100,     50,       20,       30,       55,       35,       75,       50,        50,       90,      500   },     // 雙手插腰 頭右轉
  {    65,      35,      80,      60,      80,     100,     70,      20,     100,     50,       20,       30,       55,       35,       75,       50,        50,       90,      500   },     // 雙手插腰 頭右轉
  {    65,      35,      80,      60,      80,     100,     70,      20,     100,     50,       20,       30,       55,       35,       75,       50,       130,      90,      500   },     // 雙手插腰 頭左轉
  {    65,      35,      80,      60,      80,     100,     70,      20,     100,     50,       20,       30,       55,       35,       75,       50,       130,      90,      500   },     // 雙手插腰 頭左轉
  {    55,      35,      80,      60,      70,     100,     70,      20,      40,     100,      20,       20,       55,       35,       75,       40,        50,       90,      800   },     // 身體右傾斜 右手平舉 左手擺頭頂 頭右轉
  {    55,      35,      80,      60,      70,     100,     70,      20,      40,     100,      20,       20,       55,       35,       75,       40,        50,       90,      500   },     // 身體右傾斜 右手平舉 左手擺頭頂 頭右轉
  {    75,      35,      80,      60,      90,     100,     20,      80,     100,     50,       20,       40,       55,       35,       75,       60,       130,      90,      800   },     // 身體左傾斜 左手平舉 右手擺頭頂 頭左轉
  {    75,      35,      80,      60,      90,     100,     20,      80,     100,     50,       20,       40,       55,       35,       75,       60,       130,      90,      500   },     // 身體左傾斜 左手平舉 右手擺頭頂 頭左轉
  {    65,      35,      80,      60,      80,     100,     70,      20,     100,     50,       20,       30,       55,       35,       75,       50,        90,       90,      500   },     // 雙手插腰
  {    65,      62,      15,      17,      80,      15,      95,      80,      40,      25,      100,      30,       95,      100,      48,       50,        90,       90,      800   },     // 蹲下 雙手向前平舉
  {    65,      62,      15,      17,      80,      15,      95,      80,      40,      25,      100,      30,       95,      100,      48,       50,        90,       90,      300   },     // 蹲下 雙手向前平舉
  {    65,      35,      80,      60,      80,     100,     70,      20,     100,     50,       20,       30,       55,       35,       75,       50,        90,       90,      500   },     // 雙手插腰
  {    65,      62,      15,      17,      80,      15,      95,      80,      40,      25,      100,      30,       95,      100,      48,       50,        90,       90,      800   },     // 蹲下 雙手向前平舉
  {    65,      62,      15,      17,      80,      15,      95,      80,      40,      25,      100,      30,       95,      100,      48,       50,        90,       90,      300   },     // 蹲下 雙手向前平舉
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      800   }      // 立正
};


/*============================================================================*/
// GLICO動作
int Servo_Prg_7_Step = 6;
int Servo_Prg_7 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     100,      0,       80,      40,     120,      20,       30,       55,       35,       75,       50,        90,       90,      500   },      // 反舉雙手最高
  {    55,      35,      80,      60,      70,     100,      0,       80,      40,     120,      20,       20,       55,       35,       75,       40,        90,       90,      500   },      // 反舉雙手最高 身體右傾斜
  {    55,      35,       0,        0,       70,     100,      0,       80,      40,     120,      20,       25,       55,       35,       75,       35,        90,       90,      800   },      // 反舉雙手最高 身體右傾斜 抬高左腳
  {    55,      35,       0,        0,       70,     100,      0,       80,      40,     120,      20,       25,       55,       35,       75,       35,        90,       90,      1500 },      // 反舉雙手最高 身體右傾斜 抬高左腳 等待
  {    55,      35,      80,      60,      70,     100,      0,       80,      40,     120,      20,       20,       55,       35,       75,       40,        90,       90,      800   },      // 反舉雙手最高 身體右傾斜
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      800   }      // 立正
};


/*============================================================================*/
// 妖怪手錶動作
int Servo_Prg_8_Step = 61;
int Servo_Prg_8 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,        90,     400},      //
  {    65,      35,      80,      60,      80,      25,      85,      10,     110,     35,      100,      30,       55,       35,       75,       50,        90,        90,     300},      //
  {    65,      62,      15,      17,      80,      25,      85,      10,     110,     35,      100,      30,       95,      100,      48,       50,        90,        90,     300},      //
  {    65,      35,      80,      60,      80,      25,      85,      10,     110,     35,      100,      30,       55,       35,       75,       50,        90,        90,     300},      //
  {    65,      62,      15,      17,      80,      25,      85,      10,     110,     35,      100,      30,       95,      100,      48,       50,        90,        90,     300},      //
  {    65,      35,      80,      60,      80,      25,      85,      10,     110,     35,      100,      30,       55,       35,       75,       50,        90,        90,     300},      //
  {    65,      62,      15,      17,      80,      25,      85,      10,     110,     35,      100,      30,       95,      100,      48,       50,        90,        90,     300},      //
  {    65,      35,      80,      60,      80,      25,      85,      10,     110,     35,      100,      30,       55,       35,       75,       50,        90,        90,     300},      //
  {    65,      62,      15,      17,      80,      25,      85,      10,     110,     35,      100,      30,       95,      100,      48,       50,        90,        90,     300},      //
  {    65,      35,      80,      60,      80,      25,      85,      10,     110,     35,      100,      30,       55,       35,       75,       50,        90,        90,     200},      //
  {    65,      35,      80,      60,      80,      50,      95,      80,      40,      25,       70,       30,       55,       35,       75,       50,        90,        90,     100},      //
  {    60,      15,      65,      20,      75,      10,      95,      80,      40,      70,      130,      35,       65,       70,       45,       55,        50,        90,     450},      //
  {    65,      35,      80,      60,      80,      50,      95,      80,      40,      25,       70,       30,       55,       35,       75,       50,        90,        90,     100},      //
  {    55,      55,      70,      70,      75,       5,       50,      80,      40,      25,       20,       35,       95,       70,       80,       55,       130,       90,     450},      //
  {    65,      62,      15,      12,      80,      50,      95,      80,      40,      25,       70,       30,      100,     100,      48,       50,        90,        90,     200},      //
  {    60,      35,      80,      60,      72,       5,       95,      80,      40,      25,      120,      38,       55,       35,       75,       55,        90,        90,     400},      //
  {    65,      62,      15,      12,      80,      50,      95,      80,      40,      25,       70,       30,      100,     100,      48,       50,        90,        90,     200},      //
  {    60,      35,      80,      60,      72,       5,       95,      80,      40,      25,      120,      38,       55,       35,       75,       55,        90,        90,     400},      //
  {    65,      62,      15,      12,      80,      50,      95,      80,      40,      25,       70,       30,      100,     100,      48,       50,        90,        90,     200},      //
  {    65,      35,      80,      60,      80,      10,      95,      80,      40,      70,      130,      45,       55,       35,       75,       65,        50,        90,     400},      //
  {    65,      35,      80,      60,      80,      50,      95,      80,      40,      25,       70,       30,       55,       35,       75,       50,        90,        90,     100},      //
  {    65,      35,      80,      60,      80,       5,       50,      80,      40,      25,       20,       30,       55,       35,       75,       50,       130,       90,     450},      //
  {    65,      35,      80,      60,      80,      50,      95,      80,      40,      25,       70,       30,       55,       35,       75,       50,        90,        90,     100},      //
  {    60,      35,      80,      60,      72,       5,       95,      80,      40,      25,      120,      38,       55,       35,       75,       55,        90,        90,     450},      //
  {    65,      35,      80,      60,      80,      50,      95,      80,      40,      25,       70,       30,       55,       35,       75,       50,        90,        90,     100},      //
  {    60,      35,      80,      60,      72,       5,       95,      80,      40,      25,      120,      38,       55,       35,       75,       55,        90,        90,     450},      //
  {    60,      35,      80,      60,      72,      50,      95,      80,      40,      25,       70,       38,       55,       35,       75,       55,        90,        90,     450},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      80,      40,      25,      120,      38,       55,       35,       75,       55,        90,        90,     400},      //
  {    60,      35,      80,      60,      72,       5,       95,      80,      10,      90,      120,      38,       55,       35,       75,       55,        50,        90,     400},      //
  {    60,      35,      80,      60,      72,       5,       20,     100,     40,      25,      120,      38,       55,       35,       75,       55,       130,       90,     400},      //
  {    60,      35,      80,      60,      72,       5,       95,      80,      10,      90,      120,      38,       55,       35,       75,       55,        50,        90,     450},      //
  {    60,      35,      80,      60,      72,       5,       20,     100,     40,      25,      120,      38,       55,       35,       75,       55,       130,       90,     450},      //
  {    60,      35,      80,      60,      72,      50,      95,      80,      40,      25,       70,       38,       55,       35,       75,       55,        90,        90,     450},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,       5,       95,      15,     100,     25,       80,       38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      40,      95,      15,     100,     25,      115,      38,       55,       35,       75,       55,        90,        90,     300},      //
  {    60,      35,      80,      60,      72,      50,      95,      80,      40,      25,       70,       38,       55,       35,       75,       55,        90,        90,     450},      //
  {    60,      35,      80,      60,      72,       5,       95,      80,      40,      25,      120,      38,       55,       35,       75,       55,        90,        90,     450},      //
  {    65,      35,      80,      60,      80,      10,      80,      20,     120,     60,       20,       30,       55,       35,       75,       50,        50,        90,     500},      //
  {    65,      35,      80,      60,      80,      50,      95,      80,      40,      25,       70,       30,       55,       35,       75,       50,        90,        90,     400},      //
  {    65,      35,      80,      60,      80,     100,     60,      20,      90,      80,      120,      30,       55,       35,       75,       50,       130,       90,     500},      //
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,        90,     300}       //
};


/*============================================================================*/
// 前進動作
int Servo_Prg_10_Step = 16;
int Servo_Prg_10 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,       90,        90,      100  },   // 1
  {    75,      35,      80,      60,      90,     100,     84,      68,      52,      36,       20,       40,       55,       35,       75,       60,       90,        90,      160  },   // 2

  {    75,      35,      80,      60,      88,     100,     84,      68,      52,      36,       20,       41,       82,       96,       46,       60,       90,        90,      220  },   // 3 loop start
  {    72,      35,      80,      60,      90,      86,      84,      68,      52,      36,        1,        40,       94,       75,       72,       57,       90,        90,      220  },   // 4
  {    55,      58,      63,      58,      70,      72,      84,      68,      52,      36,        5,        20,       81,       65,       65,       40,       90,        90,      380  },   // 5
  {    55,      64,      19,      33,      69,     100,     84,      68,      52,      36,       20,       22,       55,       35,       75,       40,       90,        90,      180  },   // 6
  {    58,      38,      40,      21,      70,     119,     84,      68,      52,      36,       34,       20,       55,       35,       75,       43,       90,        90,      220  },   // 7
  {    75,      45,      50,      34,      90,     115,     84,      68,      52,      36,       48,       40,       57,       52,       52,       60,       90,        90,      360  },   // 8 loop end

  {    75,      35,      80,      60,      88,     100,     84,      68,      52,      36,       20,       41,       82,       96,       46,       60,       90,        90,      220  },   // 3 loop start
  {    72,      35,      80,      60,      90,      86,      84,      68,      52,      36,        1,        40,       94,       75,       72,       57,       90,        90,      220  },   // 4
  {    55,      58,      63,      58,      70,      72,      84,      68,      52,      36,        5,        20,       81,       65,       65,       40,       90,        90,      380  },   // 5
  {    55,      64,      19,      33,      69,     100,     84,      68,      52,      36,       20,       22,       55,       35,       75,       40,       90,        90,      180  },   // 6
  {    58,      38,      40,      21,      70,     119,     84,      68,      52,      36,       34,       20,       55,       35,       75,       43,       90,        90,      220  },   // 7
  {    75,      45,      50,      34,      90,     115,     84,      68,      52,      36,       48,       40,       57,       52,       52,       60,       90,        90,      360  },   // 8 loop end

  {    75,      35,      80,      60,      88,     100,     84,      68,      52,      36,       20,       41,       82,       96,       46,       60,       90,        90,      180  },   // 9
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,       90,        90,      580  }      // 立正
};


/*============================================================================*/
// 後退動作
int Servo_Prg_11_Step = 10;
int Servo_Prg_11 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,       90,        90,      100  },   // 1
  {    75,      35,      80,      60,      88,     101,     84,      68,      52,      36,       20,       38,       55,       35,       75,       60,       90,        90,      160  },   // 2

  {    75,      35,      80,      60,      87,     100,     84,      68,      52,      36,       20,       39,       82,       96,       46,       60,       90,        90,      360  },   // 3 loop start
  {    75,      35,      70,      44,      88,     115,     84,      68,      52,      36,       48,       38,       57,       52,       56,       60,       90,        90,      360  },   // 4
  {    53,      38,      40,      21,      71,     119,     84,      68,      52,      36,       34,       22,       55,       35,       75,       43,       90,        90,      360  },   // 5
  {    55,      64,      19,      33,      71,     100,     84,      68,      52,      36,       20,       22,       55,       35,       75,       40,       90,        90,      180  },   // 6
  {    55,      54,      63,      58,      72,      72,      84,      68,      52,      36,        5,        22,       71,       45,       75,       40,       90,        90,      360  },   // 7
  {    76,      35,      80,      60,      88,      86,      84,      68,      52,      36,        1,        39,       94,       75,       72,       66,       90,        90,      360  },   // 8 loop end

  {    79,      35,      80,      60,      87,     100,     84,      68,      52,      36,       20,       39,       82,       96,       46,       64,       90,        90,      180  },   // 9
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,       90,        90,      340  }      // 立正
};


/*============================================================================*/
// 左轉動作
int Servo_Prg_12_Step = 27;
int Servo_Prg_12 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      59,      36,      39,      80,     100,     95,      80,      40,      25,       20,       30,       75,       80,       50,       50,        90,       90,      500   },     // 淺蹲

  {    75,      40,      45,      30,      90,     100,     95,      80,      40,      25,       20,       40,       75,       80,       50,       60,        90,       90,      500   },     // 淺蹲 左傾斜
  {    80,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       95,      100,      48,       60,        90,       90,      600   },     // 淺蹲 左傾斜 右腳上抬
  {    80,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       82,       70,       70,       60,        90,       90,      500   },     // 淺蹲 左傾斜 右腳前移
  {    75,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       82,       70,       70,       60,        90,       90,      300   },     // 淺蹲 左傾斜 右腳放下

  {    55,      59,      36,      39,      70,     100,     95,      80,      40,      25,       20,       20,       75,       80,       50,       40,        90,       90,      500   },     // 淺蹲 右傾斜
  {    55,      62,      15,      17,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      600   },     // 淺蹲 右傾斜 左腳上抬
  {    55,      82,      48,      75,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      500   },     // 淺蹲 右傾斜 左腳後移
  {    55,      55,      80,      80,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      300   },     // 淺蹲 右傾斜 左腳放下

  {    75,      40,      45,      30,      90,     100,     95,      80,      40,      25,       20,       40,       75,       80,       50,       60,        90,       90,      500   },     // 淺蹲 左傾斜
  {    80,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       95,      100,      48,       60,        90,       90,      600   },     // 淺蹲 左傾斜 右腳上抬
  {    80,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       82,       70,       70,       60,        90,       90,      500   },     // 淺蹲 左傾斜 右腳前移
  {    75,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       82,       70,       70,       60,        90,       90,      300   },     // 淺蹲 左傾斜 右腳放下

  {    55,      59,      36,      39,      70,     100,     95,      80,      40,      25,       20,       20,       75,       80,       50,       40,        90,       90,      500   },     // 淺蹲 右傾斜
  {    55,      62,      15,      17,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      600   },     // 淺蹲 右傾斜 左腳上抬
  {    55,      82,      48,      75,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      500   },     // 淺蹲 右傾斜 左腳後移
  {    55,      55,      80,      80,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      300   },     // 淺蹲 右傾斜 左腳放下

  {    75,      40,      45,      30,      90,     100,     95,      80,      40,      25,       20,       40,       75,       80,       50,       60,        90,       90,      500   },     // 淺蹲 左傾斜
  {    80,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       95,      100,      48,       60,        90,       90,      600   },     // 淺蹲 左傾斜 右腳上抬
  {    80,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       82,       70,       70,       60,        90,       90,      500   },     // 淺蹲 左傾斜 右腳前移
  {    75,      59,      36,      39,      90,      70,      95,      80,      40,      25,        0,        40,       82,       70,       70,       60,        90,       90,      300   },     // 淺蹲 左傾斜 右腳放下

  {    55,      59,      36,      39,      70,     100,     95,      80,      40,      25,       20,       20,       75,       80,       50,       40,        90,       90,      500   },     // 淺蹲 右傾斜
  {    55,      62,      15,      17,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      600   },     // 淺蹲 右傾斜 左腳上抬
  {    55,      82,      48,      75,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      500   },     // 淺蹲 右傾斜 左腳後移
  {    55,      55,      80,      80,      70,      70,      95,      80,      40,      25,        0,        20,       75,       80,       50,       35,       130,      90,      300   },     // 淺蹲 右傾斜 左腳放下

  {    75,      40,      45,      30,      90,     100,     95,      80,      40,      25,       20,       40,       75,       80,       50,       60,        90,       90,      500   },     // 淺蹲 左傾斜
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      300   }      // 立正
};


/*============================================================================*/
// 右轉動作
int Servo_Prg_13_Step = 27;
int Servo_Prg_13 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      59,      36,      39,      80,     100,     95,      80,      40,      25,       20,       30,       75,       80,       50,       50,        90,       90,      500   },     // 淺蹲

  {    55,      59,      36,      39,      70,     100,     95,      80,      40,      25,       20,       20,       75,       80,       50,       40,        90,       90,      500   },     // 淺蹲 右傾斜
  {    55,      62,      15,      17,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       35,        90,       90,      600   },     // 淺蹲 右傾斜 左腳上抬
  {    55,      40,      45,      30,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       35,        90,       90,      500   },     // 淺蹲 右傾斜 左腳前移
  {    55,      40,      45,      30,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       40,        90,       90,      300   },     // 淺蹲 右傾斜 左腳放下

  {    75,      40,      45,      30,      90,     100,     95,      80,      40,      25,       20,       40,       75,       80,       50,       60,        90,       90,      500   },     // 淺蹲 左傾斜
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       95,      100,      48,       60,        50,       90,      600   },     // 淺蹲 左傾斜 右腳上抬
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       42,       70,       27,       60,        50,       90,      500   },     // 淺蹲 左傾斜 右腳後移
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       35,       35,       51,       60,        50,       90,      300   },     // 淺蹲 左傾斜 右腳放下

  {    55,      59,      36,      39,      70,     100,     95,      80,      40,      25,       20,       20,       75,       80,       50,       40,        90,       90,      500   },     // 淺蹲 右傾斜
  {    55,      62,      15,      17,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       35,        90,       90,      600   },     // 淺蹲 右傾斜 左腳上抬
  {    55,      40,      45,      30,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       35,        90,       90,      500   },     // 淺蹲 右傾斜 左腳前移
  {    55,      40,      45,      30,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       40,        90,       90,      300   },     // 淺蹲 右傾斜 左腳放下

  {    75,      40,      45,      30,      90,     100,     95,      80,      40,      25,       20,       40,       75,       80,       50,       60,        90,       90,      500   },     // 淺蹲 左傾斜
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       95,      100,      48,       60,        50,       90,      600   },     // 淺蹲 左傾斜 右腳上抬
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       42,       70,       27,       60,        50,       90,      500   },     // 淺蹲 左傾斜 右腳後移
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       35,       35,       51,       60,        50,       90,      300   },     // 淺蹲 左傾斜 右腳放下

  {    55,      59,      36,      39,      70,     100,     95,      80,      40,      25,       20,       20,       75,       80,       50,       40,        90,       90,      500   },     // 淺蹲 右傾斜
  {    55,      62,      15,      17,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       35,        90,       90,      600   },     // 淺蹲 右傾斜 左腳上抬
  {    55,      40,      45,      30,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       35,        90,       90,      500   },     // 淺蹲 右傾斜 左腳前移
  {    55,      40,      45,      30,      70,     120,     95,      80,      40,      25,       50,       20,       75,       80,       50,       40,        90,       90,      300   },     // 淺蹲 右傾斜 左腳放下

  {    75,      40,      45,      30,      90,     100,     95,      80,      40,      25,       20,       40,       75,       80,       50,       60,        90,       90,      500   },     // 淺蹲 左傾斜
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       95,      100,      48,       60,        50,       90,      600   },     // 淺蹲 左傾斜 右腳上抬
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       42,       70,       27,       60,        50,       90,      500   },     // 淺蹲 左傾斜 右腳後移
  {    80,      59,      36,      39,      90,     120,     95,      80,      40,      25,       50,       40,       35,       35,       51,       60,        50,       90,      300   },     // 淺蹲 左傾斜 右腳放下

  {    55,      59,      36,      39,      70,     100,     95,      80,      40,      25,       20,       20,       75,       80,       50,       40,        90,       90,      500   },     // 淺蹲 右傾斜
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      300   }      // 立正
};


/*============================================================================*/
// 左橫移動作
int Servo_Prg_14_Step = 7;
int Servo_Prg_14 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    59,      35,      80,      60,      78,     100,     95,      80,      40,      25,       20,       28,       55,       35,       75,       44,       90,        90,      150  },  // 1
  {    61,      51,      45,      42,      76,     100,     85,      80,      40,      35,       20,       27,       55,       35,       76,       42,       90,        90,      150  },  // 2
  {    52,      44,      59,      49,      67,     100,     85,      80,      40,      35,       20,       27,       55,       35,       76,       45,       90,        90,      150  },  // 3
  {    55,      51,      50,      42,      67,     100,     85,      80,      40,      35,       20,       28,       64,       48,       70,       53,       90,        90,      150  },  // 4
  {    73,      40,      67,      51,      87,     100,     85,      80,      40,      35,       20,       45,       60,       37,       80,       70,       90,        90,      250  },  // 5
  {    71,      40,      67,      51,      83,     100,     85,      80,      40,      35,       20,       34,       76,       76,       56,       60,       90,        90,      250  },  // 6
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,       90,        90,      250  }      // 立正
};


/*============================================================================*/
// 右橫移動作
int Servo_Prg_15_Step = 7;
int Servo_Prg_15 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    71,      35,      80,      60,      81,     100,     95,      80,      40,      25,       20,       31,       55,       35,       75,       56,       90,        90,      150  },  // 1
  {    73,      34,      80,      60,      83,     100,     85,      80,      40,      35,       20,       32,       73,       70,       59,       54,       90,        90,      150  },  // 2
  {    70,      34,      80,      60,      83,     100,     85,      80,      40,      35,       20,       42,       66,       56,       66,       63,       90,        90,      150  },  // 3
  {    62,      40,      67,      51,      83,     100,     85,      80,      40,      35,       20,       41,       73,       65,       59,       60,       90,        90,      150  },  // 4
  {    45,      30,      78,      55,      67,     100,     85,      80,      40,      35,       20,       25,       64,       48,       70,       42,       90,        90,      250  },  // 5
  {    55,      54,      39,      39,      77,     100,     85,      80,      40,      35,       20,       28,       64,       48,       70,       44,       90,        90,      250  },  // 6
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,       90,        90,      250  }      // 立正
};


/*============================================================================*/
//  仰躺起立動作
int Servo_Prg_20_Step = 10;
int Servo_Prg_20 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   },      // 立正
  {    65,      35,      80,       0,       80,     100,     20,      80,      40,     100,      20,       30,      115,      35,       75,       50,        90,       90,      800   },      // 雙手平舉 起身
  {    65,      35,      80,       0,        0,      100,     20,      80,      40,     100,      20,      110,     115,      35,       75,       50,        90,       90,      800   },      // 雙手平舉 起身 開臀
  {     0,       35,      80,      60,       0,       15,      20,      80,      40,     100,     105,     110,      55,       35,       75,      120,       90,       90,      800   },      // 雙手平舉 起身 劈腿  腳掌朝下

  {     0,       35,      80,      60,       0,       15,      20,      80,      40,     100,     105,     110,      55,       35,       75,      120,       90,       90,      500   },      // 雙手平舉 轉臂
  {     0,       35,      80,      60,       0,      100,     20,      80,      40,     100,      20,      110,      55,       35,       75,      120,       90,       90,      500   },      // 雙手平舉 轉臂平舉
  {     0,       65,       0,        0,        0,      100,     20,      80,      40,     100,      20,      110,     120,     120,      55,      120,       90,       90,      700   },      // 雙手平舉 轉臂平舉 腿部彎曲
  {    65,      65,       0,        0,       80,     100,     20,      80,      40,     100,      20,      30,       120,     120,      55,       50,        90,       90,      900   },      // 雙手平舉 轉臂平舉 合腿起立

  {    65,      35,      80,      60,      80,     100,     20,      80,      40,     100,      20,       30,       55,       35,       75,       50,        90,       90,      900   },      // 雙手平舉 腿部立直
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   }       // 立正
};


/*============================================================================*/
// 仆街起立動作
int Servo_Prg_21_Step = 12;
int Servo_Prg_21 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G14   ,  ms
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   },      // 立正
  {    65,      35,      80,      60,      80,     100,     20,      80,      40,     100,      20,       30,       55,       35,       75,       50,        90,       90,      700   },      // 雙手平舉
  {    65,      35,      80,      60,      80,      15,      20,      80,      40,     100,     105,      30,       55,       35,       75,       50,        90,       90,      700   },      // 雙手平舉 轉臂朝下
  {    65,      35,      80,      60,       0,       15,      20,      80,      40,     100,     105,     110,      55,       35,       75,       50,        90,       90,      800   },      // 雙手平舉 轉臂朝下 劈腿
  {     0,       35,      80,      60,       0,       15,     100,     80,      40,      10,      105,     110,      55,       35,       75,      120,       90,       90,      900   },      // 雙手平舉 轉臂朝前 起身 劈腿  腳掌朝下
  {     0,       35,      80,      60,       0,       15,     100,     80,      40,      10,      105,     110,      55,       35,       75,      120,       90,       90,      500   },      // 等待

  {     0,       35,      80,      60,       0,       15,      20,      80,      40,     100,     105,     110,      55,       35,       75,      120,       90,       90,      500   },      // 雙手平舉 轉臂
  {     0,       35,      80,      60,       0,      100,     20,      80,      40,     100,      20,      110,      55,       35,       75,      120,       90,       90,      500   },      // 雙手平舉 轉臂平舉
  {     0,       65,       0,        0,        0,      100,     20,      80,      40,     100,      20,      110,     120,     120,      55,      120,       90,       90,      700   },      // 雙手平舉 轉臂平舉 腿部彎曲
  {    65,      65,       0,        0,       80,     100,     20,      80,      40,     100,      20,      30,       120,     120,      55,       50,        90,       90,      900   },      // 雙手平舉 轉臂平舉 合腿起立

  {    65,      35,      80,      60,      80,     100,     20,      80,      40,     100,      20,       30,       55,       35,       75,       50,        90,       90,      900   },      // 雙手平舉 腿部立直
  {    65,      35,      80,      60,      80,     100,     95,      80,      40,      25,       20,       30,       55,       35,       75,       50,        90,       90,      500   }       // 立正
};



/*============================================================================*/
void Set_PWM_to_Servo(int iServo, int iValue)
{
  int NewPWM = map(iValue, PWMRES_Min, PWMRES_Max, SERVOMIN, SERVOMAX);

  if (iServo >= 17)
  {
    GPIO14SERVO.write(iValue);
  }
  else if (iServo >= 16)
  {
    GPIO12SERVO.write(iValue);
  }
  else
  {
    pwm.setPWM(iServo, 0, NewPWM);
  }
}


/*============================================================================*/
void Servo_PROGRAM_Zero()
{
  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_0[Index] + (int8_t)EEPROM.read(Index);
  }

  // 重新載入馬達預設數值
  for (int iServo = 0; iServo < ALLSERVOS; iServo++)
  {
    Set_PWM_to_Servo(iServo, Running_Servo_POS[iServo]);
    delay(10);
  }
}


/*============================================================================*/
void Servo_PROGRAM_Center()
{
  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_1[Index] + (int8_t)EEPROM.read(Index);
  }

  // 重新載入馬達預設數值
  for (int iServo = 0; iServo < ALLSERVOS; iServo++)
  {
    Set_PWM_to_Servo(iServo, Running_Servo_POS[iServo]);
    delay(10);
  }
}


/*============================================================================*/
void Servo_PROGRAM_Run(int iMatrix[][ALLMATRIX],  int iSteps)
{
  int INT_TEMP_A, INT_TEMP_B, INT_TEMP_C;

  for ( int MainLoopIndex = 0; MainLoopIndex < iSteps; MainLoopIndex++)  // iSteps 步驟主迴圈
  {
    // InterTotalTime 此步驟總時間
    int InterTotalTime = iMatrix [ MainLoopIndex ] [ ALLMATRIX - 1 ] + (int8_t)EEPROM.read(ALLMATRIX - 1);

    // InterDelayCounter 此步驟基本延遲次數
    int InterDelayCounter = InterTotalTime / BASEDELAYTIME;

    // 內差次數迴圈
    for ( int InterStepLoop = 0; InterStepLoop < InterDelayCounter; InterStepLoop++)
    {

      for (int ServoIndex = 0; ServoIndex < ALLSERVOS; ServoIndex++)  // 馬達主迴圈
      {

        INT_TEMP_A = Running_Servo_POS[ServoIndex];                                                    // 馬達現在位置
        INT_TEMP_B = iMatrix[MainLoopIndex][ServoIndex] + (int8_t)EEPROM.read(ServoIndex);    // 馬達目標位置

        if (INT_TEMP_A == INT_TEMP_B)         // 馬達數值不變
        {
          INT_TEMP_C = INT_TEMP_B;
        }

        else if (INT_TEMP_A > INT_TEMP_B)   // 馬達數值減少
        {
          // PWM內差值 = map( 執行次數時間累加, 開始時間, 結束時間, 內差起始值, 內差最大值 )
          INT_TEMP_C =  map(BASEDELAYTIME * InterStepLoop, 0, InterTotalTime, 0, INT_TEMP_A - INT_TEMP_B);

          if (INT_TEMP_A - INT_TEMP_C >= INT_TEMP_B)
          {
            Set_PWM_to_Servo(ServoIndex, INT_TEMP_A - INT_TEMP_C);
          }
        }

        else if (INT_TEMP_A < INT_TEMP_B)   // 馬達數值增加
        {
          // PWM內差值 = map( 執行次數時間累加, 開始時間, 結束時間, 內差起始值, 內差最大值 )
          INT_TEMP_C =  map(BASEDELAYTIME * InterStepLoop, 0, InterTotalTime, 0, INT_TEMP_B - INT_TEMP_A);

          if (INT_TEMP_A + INT_TEMP_C <= INT_TEMP_B)
          {
            Set_PWM_to_Servo(ServoIndex, INT_TEMP_A + INT_TEMP_C);
          }
        }

      }

      delay(BASEDELAYTIME);
    }

    // 備份目前馬達數值
    for ( int Index = 0; Index < ALLMATRIX; Index++)
    {
      Running_Servo_POS[Index] = iMatrix[MainLoopIndex][Index] + (int8_t)EEPROM.read(Index);
    }

  }

}


/*============================================================================*/
void Get_PWM_Frequency()
{
  int iCab_Freq =  (int8_t)EEPROM.read(ALLMATRIX);

  // 清除錯誤資料
  if (iCab_Freq > 120 || iCab_Freq < -120)
  {
    EEPROM.write(ALLMATRIX, 0);
    EEPROM.commit();
    iCab_Freq = 0;
  }

  Set_PWM_Freq = PWM_Frequency + iCab_Freq;
}


/*============================================================================*/
void writeKeyValue(int8_t key, int8_t value)
{
  EEPROM.write(key, value);
  EEPROM.commit();
}


/*============================================================================*/
int8_t readKeyValue(int8_t key)
{
  Serial.println("read");
  Serial.println(key);

  int8_t value = EEPROM.read(key);
}


/*============================================================================*/
void handleAction(WiFiClient client, String req, HTTPMethod method)
{
  server.send(200, "text/plain", "Hello from MiniPlan !");
}


/*============================================================================*/
void handleSave()
{
  String key = server.arg("key");
  String value = server.arg("value");

  int8_t keyInt = key.toInt();
  int8_t valueInt = value.toInt();

  // Software PWM PIN detach
  GPIO14SERVO.detach();
  GPIO12SERVO.detach();
  delay(50);

  if (keyInt == 100)
  {
    writeKeyValue(0, 0);
    writeKeyValue(1, 0);
    writeKeyValue(2, 0);
    writeKeyValue(3, 0);
    writeKeyValue(4, 0);
    writeKeyValue(5, 0);
    writeKeyValue(6, 0);
    writeKeyValue(7, 0);
    writeKeyValue(8, 0);
    writeKeyValue(9, 0);
    writeKeyValue(10, 0);
    writeKeyValue(11, 0);
    writeKeyValue(12, 0);
    writeKeyValue(13, 0);
    writeKeyValue(14, 0);
    writeKeyValue(15, 0);
    writeKeyValue(16, 0);
    writeKeyValue(17, 0);
    writeKeyValue(18, 0);
    writeKeyValue(19, 0);
  }
  else
  {
    // 確認資料介於 -124 ~ 124
    if (valueInt >= -124 && valueInt <= 124)
    {
      // 儲存校正值
      writeKeyValue(keyInt, valueInt);

      // 若 Set_PWM_Freq 有被修改就即時更新
      if (keyInt == 19) {
        Set_PWM_Freq = PWM_Frequency + valueInt;
        pwm.setPWMFreq(Set_PWM_Freq);
      }
    }
  }

  // Software PWM PIN attach
  GPIO14SERVO.attach(14);
  GPIO12SERVO.attach(12);
  delay(10);

  server.send(200, "text/html", "(key, value)=(" + key + "," + value + ")");
}


/*============================================================================*/
void handleController()
{
  String pm = server.arg("pm");
  String pms = server.arg("pms");
  String gpid = server.arg("gpid");
  String servo = server.arg("servo");

  if (pm != "")
  {
    Servo_PROGRAM = pm.toInt();
  }

  if (pms != "")
  {
    Servo_PROGRAM_Stack = pms.toInt();
  }

  if (servo != "")
  {
    int Servo_ID = servo.toInt();
    String ival = server.arg("value");
    int Servo_PWM = ival.toInt() + (int8_t)EEPROM.read(Servo_ID);
    int pulselength = map(Servo_PWM, PWMRES_Min, PWMRES_Max, SERVOMIN, SERVOMAX);

    //Serial.print("Servo ID = ");
    //Serial.print(Servo_ID);
    //Serial.print(", PWM = ");
    //Serial.println(pulselength);

    pwm.setPWM(Servo_ID, 0, pulselength);
  }

  if (gpid != "")
  {
    GPIO_ID = gpid.toInt();

    if (GPIO_ID == 12) {
      String ival = server.arg("value");
      GPIO12_PWM = ival.toInt() + (int8_t)EEPROM.read(16);
      GPIO12SERVO.write(GPIO12_PWM);
    }

    if (GPIO_ID == 14) {
      String ival = server.arg("value");
      GPIO14_PWM = ival.toInt() + (int8_t)EEPROM.read(17);
      GPIO14SERVO.write(GPIO14_PWM);
    }
  }

  server.send(200, "text/html", "(pm, pms)=(" + pm + "," + pms + ")");
}


/*============================================================================
  無線傳輸模式
  ============================================================================*/
void handleOnLine()
{
  String m0 = server.arg("m0");
  String m1 = server.arg("m1");
  String m2 = server.arg("m2");
  String m3 = server.arg("m3");
  String m4 = server.arg("m4");
  String m5 = server.arg("m5");
  String m6 = server.arg("m6");
  String m7 = server.arg("m7");
  String m8 = server.arg("m8");
  String m9 = server.arg("m9");
  String m10 = server.arg("m10");
  String m11 = server.arg("m11");
  String m12 = server.arg("m12");
  String m13 = server.arg("m13");
  String m14 = server.arg("m14");
  String m15 = server.arg("m15");
  String g12 = server.arg("g12");
  String g14 = server.arg("g14");
  String t1 = server.arg("t1");

  int Servo_Prg_tmp [][19] = {
    //     0,             1,              2,              3,              4,              5,              6,              7,              8,              9,               10,              11,              12,              13,              14,              15,                  G12,           G14,        Time
    {m0.toInt(), m1.toInt(), m2.toInt(), m3.toInt(), m4.toInt(), m5.toInt(), m6.toInt(), m7.toInt(), m8.toInt(), m9.toInt(), m10.toInt(), m11.toInt(), m12.toInt(), m13.toInt(), m14.toInt(), m15.toInt(), g12.toInt(), g14.toInt(), t1.toInt()}
  };

  Servo_PROGRAM_Run(Servo_Prg_tmp, 1);

  server.send(200, "text/html", "(m0, m1)=(" + m0 + "," + m1 + ")");
}


/*============================================================================
  馬達歸零畫面
  ============================================================================*/
void handleZero()
{
  String content = "";
  content += "<html>";
  content += "<head>";
  content += "<title>MiniPlan Zero Check</title>";
  content += " <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(14, 90)\">GPIO 14</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(12, 90)\">GPIO 12</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(8,40)\">Servo 8</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(7,80)\">Servo 7</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(9,100)\">Servo 9</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(6,20)\">Servo 6</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(10,20)\">Servo 10</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(5, 100)\">Servo 5</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(11,30)\">Servo 11</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(4,80)\">Servo 4</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(12,55)\">Servo 12</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(3,60)\">Servo 3</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(13,35)\">Servo 13</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(2,80)\">Servo 2</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(14,75)\">Servo 14</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(1,35)\">Servo 1</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(15,50)\">Servo 15</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(0,65)\">Servo 0</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(100)\">ALL</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";
  content += "function controlServo(id, value) {";
  content += "  var xhttp = new XMLHttpRequest();";

  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?servo=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlGpid(id, value) {";
  content += "  var xhttp = new XMLHttpRequest();";

  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?gpid=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "function controlPm(value) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";

  server.send(200, "text/html", content);
}


/*============================================================================
  簡易動作編輯畫面
  ============================================================================*/
void handleEditor()
{
  String content = "";
  content += "<html>";
  content += "<head>";
  content += "  <title>MiniPlan Motion Editor</title>";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td>GPIO 14  ,  Default value = 90<br/><input class=\"pm_text\" type=\"text\" id=\"gpid_14\" value=\"90\"><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(14, 'gpid_14')\">SEND</button></td>";
  content += "<td>GPIO 12  ,  Default value = 90<br/><input class=\"pm_text\" type=\"text\" id=\"gpid_12\" value=\"90\"><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(12, 'gpid_12')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>Servo 8  ,  Default value = 40<br/><input class=\"pm_text\" type=\"text\" id=\"servo_8\" value=\"40\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(8,'servo_8')\">SEND</button></td>";
  content += "<td>Servo 7  ,  Default value = 80<br/><input class=\"pm_text\" type=\"text\" id=\"servo_7\" value=\"80\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(7, 'servo_7')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 9  ,  Default value = 100<br/><input class=\"pm_text\" type=\"text\" id=\"servo_9\" value=\"100\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(9,'servo_9')\">SEND</button></td>";
  content += "<td>Servo 6  ,  Default value = 20<br/><input class=\"pm_text\" type=\"text\" id=\"servo_6\" value=\"20\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(6,'servo_6')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 10  ,  Default value = 20<br/><input class=\"pm_text\" type=\"text\" id=\"servo_10\" value=\"20\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(10,'servo_10')\">SEND</button></td>";
  content += "<td>Servo 5  ,  Default value = 100<br/><input class=\"pm_text\" type=\"text\" id=\"servo_5\" value=\"100\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(5,'servo_5')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>Servo 11  ,  Default value = 30<br/><input class=\"pm_text\" type=\"text\" id=\"servo_11\" value=\"30\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(11,'servo_11')\">SEND</button></td>";
  content += "<td>Servo 4  ,  Default value = 80<br/><input class=\"pm_text\" type=\"text\" id=\"servo_4\" value=\"80\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(4,'servo_4')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 12  ,  Default value = 55<br/><input class=\"pm_text\" type=\"text\" id=\"servo_12\" value=\"55\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(12,'servo_12')\">SEND</button></td>";
  content += "<td>Servo 3  ,  Default value = 60<br/><input class=\"pm_text\" type=\"text\" id=\"servo_3\" value=\"60\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(3,'servo_3')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 13  ,  Default value = 35<br/><input class=\"pm_text\" type=\"text\" id=\"servo_13\" value=\"35\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(13,'servo_13')\">SEND</button></td>";
  content += "<td>Servo 2  ,  Default value = 80<br/><input class=\"pm_text\" type=\"text\" id=\"servo_2\" value=\"80\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(2,'servo_2')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 14  ,  Default value = 75<br/><input class=\"pm_text\" type=\"text\"  id=\"servo_14\" value=\"75\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(14,'servo_14')\">SEND</button></td>";
  content += "<td>Servo 1  ,  Default value = 35<br/><input class=\"pm_text\" type=\"text\" id=\"servo_1\" value=\"35\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(1,'servo_1')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 15  ,  Default value = 50<br/><input class=\"pm_text\" type=\"text\"  id=\"servo_15\" value=\"50\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(15,'servo_15')\">SEND</button></td>";
  content += "<td>Servo 0  ,  Default value = 65<br/><input class=\"pm_text\" type=\"text\" id=\"servo_0\" value=\"65\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(0,'servo_0')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(99)\">STANDBY POSE</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";

  content += "function controlServo(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = document.getElementById(textId).value;";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\",\"controller?servo=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlGpid(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = document.getElementById(textId).value;";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?gpid=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "function controlPm(value) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";
  server.send(200, "text/html", content);
}


/*============================================================================
  馬達校正畫面
  ============================================================================*/
void handleSetting()
{
  int servo19Val = readKeyValue(19);
  String servo19ValStr = String(servo19Val);

  int servo18Val = readKeyValue(18);
  String servo18ValStr = String(servo18Val);

  int servo17Val = readKeyValue(17);
  String servo17ValStr = String(servo17Val);

  int servo16Val = readKeyValue(16);
  String servo16ValStr = String(servo16Val);

  int servo15Val = readKeyValue(15);
  String servo15ValStr = String(servo15Val);

  int servo14Val = readKeyValue(14);
  String servo14ValStr = String(servo14Val);

  int servo13Val = readKeyValue(13);
  String servo13ValStr = String(servo13Val);

  int servo12Val = readKeyValue(12);
  String servo12ValStr = String(servo12Val);

  int servo11Val = readKeyValue(11);
  String servo11ValStr = String(servo11Val);

  int servo10Val = readKeyValue(10);
  String servo10ValStr = String(servo10Val);

  int servo9Val = readKeyValue(9);
  String servo9ValStr = String(servo9Val);

  int servo8Val = readKeyValue(8);
  String servo8ValStr = String(servo8Val);

  int servo7Val = readKeyValue(7);
  String servo7ValStr = String(servo7Val);

  int servo6Val = readKeyValue(6);
  String servo6ValStr = String(servo6Val);

  int servo5Val = readKeyValue(5);
  String servo5ValStr = String(servo5Val);

  int servo4Val = readKeyValue(4);
  String servo4ValStr = String(servo4Val);

  int servo3Val = readKeyValue(3);
  String servo3ValStr = String(servo3Val);

  int servo2Val = readKeyValue(2);
  String servo2ValStr = String(servo2Val);

  int servo1Val = readKeyValue(1);
  String servo1ValStr = String(servo1Val);

  int servo0Val = readKeyValue(0);
  String servo0ValStr = String(servo0Val);

  String content = "";
  content += "<html>";
  content += "<head>";
  content += "  <title>MiniPlan Setting</title>";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 120px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 80px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td>GPIO 14<br/><input class=\"pm_text\" type=\"text\" id=\"servo_17\" value=\"" + servo17ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(17,'servo_17')\">SET</button></td>";
  content += "<td>GPIO 12<br/><input class=\"pm_text\" type=\"text\" id=\"servo_16\" value=\"" + servo16ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(16,'servo_16')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 8<br/><input class=\"pm_text\" type=\"text\" id=\"servo_8\" value=\"" + servo8ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(8,'servo_8')\">SET</button></td>";
  content += "<td>Servo 7<br/><input class=\"pm_text\" type=\"text\" id=\"servo_7\" value=\"" + servo7ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(7,'servo_7')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 9<br/><input class=\"pm_text\" type=\"text\" id=\"servo_9\" value=\"" + servo9ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(9,'servo_9')\">SET</button></td>";
  content += "<td>Servo 6<br/><input class=\"pm_text\" type=\"text\" id=\"servo_6\" value=\"" + servo6ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(6,'servo_6')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 10<br/><input class=\"pm_text\" type=\"text\" id=\"servo_10\" value=\"" + servo10ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(10,'servo_10')\">SET</button></td>";
  content += "<td>Servo 5<br/><input class=\"pm_text\" type=\"text\" id=\"servo_5\" value=\"" + servo5ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(5,'servo_5')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 11<br/><input class=\"pm_text\" type=\"text\" id=\"servo_11\" value=\"" + servo11ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(11,'servo_11')\">SET</button></td>";
  content += "<td>Servo 4<br/><input class=\"pm_text\" type=\"text\" id=\"servo_4\" value=\"" + servo4ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(4,'servo_4')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 12<br/><input class=\"pm_text\" type=\"text\" id=\"servo_12\" value=\"" + servo12ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(12,'servo_12')\">SET</button></td>";
  content += "<td>Servo 3<br/><input class=\"pm_text\" type=\"text\" id=\"servo_3\" value=\"" + servo3ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(3,'servo_3')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 13<br/><input class=\"pm_text\" type=\"text\" id=\"servo_13\" value=\"" + servo13ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(13,'servo_13')\">SET</button></td>";
  content += "<td>Servo 2<br/><input class=\"pm_text\" type=\"text\" id=\"servo_2\" value=\"" + servo2ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(2,'servo_2')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 14<br/><input class=\"pm_text\" type=\"text\" id=\"servo_14\" value=\"" + servo14ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(14,'servo_14')\">SET</button></td>";
  content += "<td>Servo 1<br/><input class=\"pm_text\" type=\"text\" id=\"servo_1\" value=\"" + servo1ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(1,'servo_1')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 15<br/><input class=\"pm_text\" type=\"text\" id=\"servo_15\" value=\"" + servo15ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(15,'servo_15')\">SET</button></td>";
  content += "<td>Servo 0<br/><input class=\"pm_text\" type=\"text\" id=\"servo_0\" value=\"" + servo0ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(0,'servo_0')\">SET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>Delay Time<br/><input class=\"pm_text\" type=\"text\" id=\"servo_18\" value=\"" + servo18ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(18,'servo_18')\">SET</button></td>";
  content += "<td>PWM Frequency Calibration<br/><input class=\"pm_text\" type=\"text\" id=\"servo_19\" value=\"" + servo19ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(19,'servo_19')\">SET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";
  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"saveServo(100, 0)\">RESET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";

  content += "function saveServo(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = \"0\";";
  content += "  if(id==100){";
  content += "    document.getElementById(\"servo_19\").value = \"0\";";
  content += "    document.getElementById(\"servo_18\").value = \"0\";";
  content += "    document.getElementById(\"servo_17\").value = \"0\";";
  content += "    document.getElementById(\"servo_16\").value = \"0\";";
  content += "    document.getElementById(\"servo_15\").value = \"0\";";
  content += "    document.getElementById(\"servo_14\").value = \"0\";";
  content += "    document.getElementById(\"servo_13\").value = \"0\";";
  content += "    document.getElementById(\"servo_12\").value = \"0\";";
  content += "    document.getElementById(\"servo_11\").value = \"0\";";
  content += "    document.getElementById(\"servo_10\").value = \"0\";";
  content += "    document.getElementById(\"servo_9\").value = \"0\";";
  content += "    document.getElementById(\"servo_8\").value = \"0\";";
  content += "    document.getElementById(\"servo_7\").value = \"0\";";
  content += "    document.getElementById(\"servo_6\").value = \"0\";";
  content += "    document.getElementById(\"servo_5\").value = \"0\";";
  content += "    document.getElementById(\"servo_4\").value = \"0\";";
  content += "    document.getElementById(\"servo_3\").value = \"0\";";
  content += "    document.getElementById(\"servo_2\").value = \"0\";";
  content += "    document.getElementById(\"servo_1\").value = \"0\";";
  content += "    document.getElementById(\"servo_0\").value = \"0\";";
  content += "  }else{";
  content += "    value = document.getElementById(textId).value;";
  content += "   }";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\",\"save?key=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";
  server.send(200, "text/html", content);
}


/*============================================================================
  主控畫面
  ============================================================================*/
void handleIndex()
{
  String content = "";
  content += "<html>";

  content += "<head>";
  content += "  <title>MiniPlan Controller</title>";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += " font-size: 24px;";
  content += "background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += " </style>";
  content += "</head>";


  content += "<body>";
  content += "<table>";
  content += "<tr>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(3)\">TurnLeft</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(1)\">Forward</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(4)\">TurnRight</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(5)\">MoveLeft</button></td>";
  content += "<td><button  class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(99)\">STANDBY</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(6)\">MoveRight</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(2)\">Backward</button></td>";
  content += "<td></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" type=\"button\" onclick=\"controlPm(11)\">Get Up</button></td>";
  content += "<td><button class=\"pms_btn\" type=\"button\" onclick=\"controlPm(12)\">FaceDownGetUp</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(1)\">Bow</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(4)\">Apache</button></td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(2)\">Waving</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(5)\">Balance</button></td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(3)\">Iron Man</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(6)\">Warm-Up</button></td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(7)\">GLICO</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(8)\">Dance</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td colspan=\"2\"><center><button  class=\"pms_btn\" style=\"background: #04b404;\" type=\"button\" onclick=\"controlPms(99)\">Auto</button></center></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td>\"" + FW_Version + "\"</td>";
  content += "</tr>";
  content += "</table>";

  content += "</body>";
  content += "<script>";
  content += "function controlPm(id) {";
  content += "var xhttp = new XMLHttpRequest();";
  content += "xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";

  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+id, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlPms(id) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";

  content += " }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pms=\"+id, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "</script>";
  content += "</html>";

  server.send(200, "text/html", content);
}


/*============================================================================*/
void enableWebServer()
{
  HTTPMethod getMethod = HTTP_GET;

  server.on("/controller", getMethod, handleController);
  server.on("/save", getMethod, handleSave);

  server.on("/", getMethod, handleIndex);
  server.on("/editor", getMethod, handleEditor);
  server.on("/zero", getMethod, handleZero);
  server.on("/setting", getMethod, handleSetting);

  server.on("/online", getMethod, handleOnLine);

  server.begin();
}


/*============================================================================*/
void setup(void) {

  // UART
  Serial.begin(9600);
  Serial.println("MiniPlan V5 Start");


  // PCA9685 OE PIN
  pinMode(13, OUTPUT);
  digitalWrite(13, LOW);


  // Initialize I2C
  Wire.begin(4, 5);


  // AP SSID Name
  uint8_t mac[WL_MAC_ADDR_LENGTH];
  WiFi.softAPmacAddress(mac);
  String macID = String(mac[WL_MAC_ADDR_LENGTH - 2], HEX) +
                 String(mac[WL_MAC_ADDR_LENGTH - 1], HEX);
  macID.toUpperCase();

  String AP_NameString = "MiniPlan V5 - " + macID;

  char AP_NameChar[AP_NameString.length() + 1];
  memset(AP_NameChar, 0, AP_NameString.length() + 1);

  for (int i = 0; i < AP_NameString.length(); i++)
    AP_NameChar[i] = AP_NameString.charAt(i);

  WiFi.softAP(AP_NameChar, WiFiAPPSK);
  IPAddress myIP = WiFi.softAPIP();


  // EEPROM
  EEPROM.begin(512);
  delay(10);


  // PWMServoDriver
  pwm.begin();
  Get_PWM_Frequency();
  pwm.setPWMFreq(Set_PWM_Freq);


  // Software PWM PIN
  GPIO12SERVO.attach(12);
  GPIO14SERVO.attach(14);


  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_1[Index] + (int8_t)EEPROM.read(Index);
  }


  // 網頁形成
  enableWebServer();
}



/*============================================================================*/
void loop(void) {

  server.handleClient();

  if (Servo_PROGRAM >= 1 )
  {
    switch (Servo_PROGRAM)
    {
      case 1:  // 前進
        Servo_PROGRAM_Run(Servo_Prg_10, Servo_Prg_10_Step);
        Servo_PROGRAM_Center();
        break;
      case 2:  // 後退
        Servo_PROGRAM_Run(Servo_Prg_11, Servo_Prg_11_Step);
        Servo_PROGRAM_Center();
        break;
      case 3:  // 左轉
        Servo_PROGRAM_Run(Servo_Prg_12, Servo_Prg_12_Step);
        Servo_PROGRAM_Center();
        break;
      case 4:  // 右轉
        Servo_PROGRAM_Run(Servo_Prg_13, Servo_Prg_13_Step);
        Servo_PROGRAM_Center();
        break;
      case 5:  // 左橫移動作
        Servo_PROGRAM_Run(Servo_Prg_14, Servo_Prg_14_Step);
        Servo_PROGRAM_Center();
        break;
      case 6:  // 右橫移動作
        Servo_PROGRAM_Run(Servo_Prg_15, Servo_Prg_15_Step);
        Servo_PROGRAM_Center();
        break;
      case 11:  // 仰躺起立
        Servo_PROGRAM_Run(Servo_Prg_20, Servo_Prg_20_Step);
        Servo_PROGRAM_Center();
        break;
      case 12:  // 仆街起立
        Servo_PROGRAM_Run(Servo_Prg_21, Servo_Prg_21_Step);
        Servo_PROGRAM_Center();
        break;
      case 99:  // 待機
        Servo_PROGRAM_Center();
        delay(300);
        break;
      case 100: // 歸零
        Servo_PROGRAM_Zero();
        delay(300);
        break;
    }
    Servo_PROGRAM = 0;
  }

  if (Servo_PROGRAM_Stack >= 1)
  {
    switch (Servo_PROGRAM_Stack)
    {
      case 1:  // 鞠躬動作
        Servo_PROGRAM_Run(Servo_Prg_1, Servo_Prg_1_Step);
        Servo_PROGRAM_Center();
        break;
      case 2:  // 揮手動作
        Servo_PROGRAM_Run(Servo_Prg_2, Servo_Prg_2_Step);
        Servo_PROGRAM_Center();
        break;
      case 3:  // 鋼鐵人動作
        Servo_PROGRAM_Run(Servo_Prg_3, Servo_Prg_3_Step);
        Servo_PROGRAM_Center();
        break;
      case 4:  // 右邊單腳側傾動作
        Servo_PROGRAM_Run(Servo_Prg_4, Servo_Prg_4_Step);
        Servo_PROGRAM_Center();
        break;
      case 5:  // 左邊單腳平衡動作
        Servo_PROGRAM_Run(Servo_Prg_5, Servo_Prg_5_Step);
        Servo_PROGRAM_Center();
        break;
      case 6:  // 暖身動作
        Servo_PROGRAM_Run(Servo_Prg_6, Servo_Prg_6_Step);
        Servo_PROGRAM_Center();
        break;
      case 7:  // GLICO動作
        Servo_PROGRAM_Run(Servo_Prg_7, Servo_Prg_7_Step);
        Servo_PROGRAM_Center();
        break;
      case 8:  // 妖怪手錶動作
        Servo_PROGRAM_Run(Servo_Prg_8, Servo_Prg_8_Step);
        Servo_PROGRAM_Center();
        break;
      case 99:  // 動作 AUTO DEMO
        Servo_PROGRAM_Run(Servo_Prg_1, Servo_Prg_1_Step);
        Servo_PROGRAM_Center();
        delay(1000);
        Servo_PROGRAM_Run(Servo_Prg_2, Servo_Prg_2_Step);
        Servo_PROGRAM_Center();
        delay(1000);
        Servo_PROGRAM_Run(Servo_Prg_6, Servo_Prg_6_Step);
        Servo_PROGRAM_Center();
        delay(1000);
        Servo_PROGRAM_Run(Servo_Prg_3, Servo_Prg_3_Step);
        Servo_PROGRAM_Center();
        delay(1000);
        Servo_PROGRAM_Run(Servo_Prg_4, Servo_Prg_4_Step);
        Servo_PROGRAM_Center();
        delay(1000);
        Servo_PROGRAM_Run(Servo_Prg_5, Servo_Prg_5_Step);
        Servo_PROGRAM_Center();
        delay(1000);
        Servo_PROGRAM_Run(Servo_Prg_1, Servo_Prg_1_Step);
        Servo_PROGRAM_Center();
        break;
    }
    Servo_PROGRAM_Stack = 0;
  }

}



